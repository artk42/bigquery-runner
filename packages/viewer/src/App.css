:root {
  --header-height: 28px;
}

.header {
  position: sticky;
  top: 0;
  width: 100%;
  height: var(--header-height);
}
.header::before {
  display: block;
  width: 100%;
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
}
.nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: var(--vscode-editorGroupHeader-tabsBackground);
  border-bottom: 1px solid var(--vscode-editorGroupHeader-tabsBorder);
}

.footer {
  position: sticky;
  bottom: 0;
  width: 100%;
  height: 22px;
}
.pagination {
  position: fixed;
  bottom: 0;
  width: 100%;
  height: 22px;
  background-color: var(--vscode-statusBar-background);
  border-top: 1px solid var(--vscode-statusBar-border);
}

.button.tab {
  position: relative;
  white-space: nowrap;
  box-sizing: border-box;

  width: 120px;
  min-width: fit-content;
  min-width: -moz-fit-content;
  flex-shrink: 0;

  border-right: 1px solid var(--vscode-tab-border);

  height: calc(var(--header-height) - 1px);
  line-height: calc(var(--header-height) - 1px);
}

.button.tab,
.button.tab:hover,
.button.tab.pressed {
  color: var(--vscode-tab-unfocusedInactiveForeground);
  background-color: var(--vscode-tab-unfocusedInactiveBackground);
}
.focused .button.tab,
.focused .button.tab:hover,
.focused .button.tab.pressed {
  color: var(--vscode-tab-inactiveForeground);
  background-color: var(--vscode-tab-inactiveBackground);
}

.button.tab.current,
.button.tab.current:hover,
.button.tab.current.pressed {
  cursor: default;
  color: var(--vscode-tab-unfocusedActiveForeground);
  background-color: var(--vscode-tab-unfocusedActiveBackground);
}
.focused .button.tab.current,
.focused .button.tab.current:hover,
.focused .button.tab.current.pressed {
  color: var(--vscode-tab-activeForeground);
  background-color: var(--vscode-tab-activeBackground);
}

.button.tab .tabBorder {
  width: 100%;
  height: 1px;
  background-color: transparent;
}
.focused .button.tab.current .tabBorder {
  background-color: var(--vscode-tab-activeBorder);
}

.tabContent {
  display: none;
}
.tabContent.show {
  display: block;
}

table {
  border-collapse: separate;
  border-spacing: 0;
}
thead {
  position: sticky;
  top: var(--header-height);
  background-color: var(--vscode-editor-background);
}
thead tr th {
  background-color: var(--vscode-editor-background);
  border-width: 0 0 1px 0;
  border-style: solid;
  border-color: var(--vscode-terminal-border);
}
tbody tr td {
  border-width: 0 0 1px 0;
  border-style: solid;
  border-color: var(--vscode-terminal-border);
}

th {
  padding: 4px 16px;
  text-align: left;
  vertical-align: top;
}
td {
  padding: 8px 16px;
  text-align: left;
  vertical-align: top;
}
thead th {
  padding-top: 8px;
}
tbody tr:last-of-type td {
  border-width: 0;
}
tbody tr.lastOfRowNumber td.rowNumber {
  border-width: 0;
}

.rowNumber {
  color: var(--vscode-descriptionForeground);
}

.box {
  box-sizing: border-box;
}

.flex {
  display: flex;
}
.flex.direction-horizontal {
  flex-direction: row;
}
.flex.direction-horizontal.reverse {
  flex-direction: row-reverse;
}
.flex.direction-vertical {
  flex-direction: column;
}
.flex.direction-vertical.reverse {
  flex-direction: column-reverse;
}
.flex.justify-start {
  justify-content: flex-start;
}
.flex.justify-end {
  justify-content: flex-end;
}
.flex.justify-center {
  justify-content: center;
}
.flex.justify-between {
  justify-content: space-between;
}
.flex.justify-around {
  justify-content: space-around;
}
.flex.align-strech {
  align-items: stretch;
}
.flex.align-start {
  align-items: flex-start;
}
.flex.align-end {
  align-items: flex-end;
}
.flex.align-center {
  align-items: center;
}
.flex.align-baseline {
  align-items: baseline;
}

.px-1 {
  padding-left: 4px;
  padding-right: 4px;
}
.px-2 {
  padding-left: 8px;
  padding-right: 8px;
}
.px-3 {
  padding-left: 16px;
  padding-right: 16px;
}
.py-1 {
  padding-top: 4px;
  padding-bottom: 4px;
}
.py-2 {
  padding-top: 8px;
  padding-bottom: 8px;
}
.py-3 {
  padding-top: 16px;
  padding-bottom: 16px;
}
.gap-1 {
  gap: 4px;
}
.gap-2 {
  gap: 8px;
}
.gap-3 {
  gap: 16px;
}

.text.alignCenter {
  text-align: center;
}
.text.weakColor {
  color: var(--vscode-descriptionForeground);
}
.text.breakable {
  line-break: anywhere;
}

.text.ui {
  font-family: var(--vscode-font-family);
  font-size: var(--vscode-font-size);
}

.button {
  padding: unset;
  border: unset;
  cursor: pointer;
  color: var(--vscode-descriptionForeground);
  font-family: var(--vscode-font-family);
  background-color: unset;
}
.button:hover {
  background-color: var(--vscode-toolbar-hoverBackground);
}
.button.pressed {
  background-color: var(--vscode-toolbar-activeBackground);
}
.button:disabled {
  cursor: default;
}
.button:disabled:hover {
  background-color: unset;
}

.iconButton {
  width: 22px;
  height: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 5px;
  flex-shrink: 0;
}
.iconButton svg {
  fill: var(--vscode-tab-activeForeground);
  /* stroke: var(--vscode-tab-activeForeground); */
}
.iconButton:disabled svg {
  fill: var(--vscode-tab-inactiveForeground);
  stroke: unset;
}

.labelWrapper {
  position: relative;
}
.labelContainer {
  position: absolute;
  top: 2px;
}
.label {
  position: relative;
  left: -50%;
  background: var(--vscode-tab-activeBackground);
  color: var(--vscode-tab-activeForeground);
  padding: 2px;
  border-radius: 2px;
}

.spinner {
  fill: var(--vscode-tab-inactiveForeground);
  stroke: unset;
  will-change: transform;
  animation: codicon-spin 1s cubic-bezier(0.53, 0.21, 0.29, 0.67) infinite;
}

@keyframes codicon-spin {
  to {
    transform: rotate(1turn);
  }
}

/* .skeleton {
  opacity: 0.7;
  box-shadow: none;
  cursor: default;
  color: transparent;
  pointer-events: none;
  user-select: none;
  height: 20px;
  border-radius: 2px;
  border-color: rgb(237, 242, 247);
  background: padding-box rgb(160, 174, 192);
  animation: 0.8s linear 0s infinite alternate none running animation-skeleton;
} */

/* @keyframes animation-skeleton {
  0% {
    border-color: var(--vscode-terminal-foreground);
    background: var(--vscode-terminal-foreground);
  }
  100% {
    border-color: var(--vscode-descriptionForeground);
    background: var(--vscode-descriptionForeground);
  }
} */
