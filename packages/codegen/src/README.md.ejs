<!-- DO NOT EDIT
This file is generated from gen-src/README.md.ejs. -->
<% const base = 'https://storage.googleapis.com/bigquery-runner/' -%>
# BigQuery Runner

[![GitHub Actions](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fminodisk%2Fbigquery-runner%2Fbadge%3Fref%3Dmain&style=flat-square)](https://actions-badge.atrox.dev/minodisk/bigquery-runner/goto?ref=main)
[![Codecov](https://img.shields.io/codecov/c/github/minodisk/bigquery-runner?style=flat-square)](https://app.codecov.io/gh/minodisk/bigquery-runner/)
[![Visual Studio Marketplace Version](https://img.shields.io/visual-studio-marketplace/v/minodisk.bigquery-runner?style=flat-square)](https://marketplace.visualstudio.com/items?itemName=minodisk.bigquery-runner)

## Installation

[![Open in Visual Studio Code](https://open.vscode.dev/badges/open-in-vscode.svg)](vscode:extension/minodisk.bigquery-runner)

## Authentication

This extension requires authentication to the Google Cloud API. You can start using it in the following two steps.

1. [Create a service account and its key](https://cloud.google.com/docs/authentication/getting-started)
    - Give the service account the role of [`roles.bigquery.user`](https://cloud.google.com/bigquery/docs/access-control#permissions_and_roles)
2. Tell the key path to this extension in one of the following two ways:
    - Set the path to the key `bigqueryRunner.keyFilename` in settings.json
    - [Set the environment variable](https://cloud.google.com/docs/authentication/getting-started#setting_the_environment_variable)

## Usage

1. Open the query file
2. Open the command palette
3. Run `BigQuery Runner: Run`

![bigquery-runner-12](https://user-images.githubusercontent.com/514164/149955294-1f740196-5295-4286-8b1f-e9dfb2958cc6.gif)

## Commands

<% contributes.commands.forEach((command) => { -%>
### <%- command.title %>

|ID|
|---|
|<%- command.command %>|

<%- command.description %>

<% }) -%>
## Configuration

The extension can be customized by modifying your `settings.json` file. The available configuration options, and their defaults, are below.

<% Object.keys(contributes.configuration.properties).forEach((property) => {
  const value = contributes.configuration.properties[property]
-%>
### `<%- property -%>`

|Type|Default|<% if (value.enum) { %>Enum|<% } %>
|---|---|<% if (value.enum) { %>---|<% } %>
|<%- Array.isArray(value.type) ? value.type.join(' &#x7C; ') : value.type %>|<%- JSON.stringify(value.default) %>|<% if (value.enum) { %><%- value.enum.map(JSON.stringify, JSON).join(' &#x7C; ') %>|<% } %>

<%- value.description -%>

<% if (value.screenshot) { -%>
![<%- property %>](<%- base %><%- value.screenshot %>)
<% } -%>

<% }) -%>

## Features

- Write SQL in VSCode and query BigQuery datasets directly
- Query from selected text
- Marking errors in a query
- Fast rendering of huge results
- Pagination
- Format in a variety of formats
    - HTML `<table/>`
    - Text neatly formatted into a table
    - JSON
    - JSON Lines
    - CSV
- Output to various destinations
    - Viewer that is highly compatible with the themes and fonts set in your VSCode
    - Log window, the UI of VSCode
    - File

## Recommended Setting

### To use keyboard shortcuts for run and paging:

The `key` is an example, but it should be set in keybindings.json.

```json:keybindings.json
{
  {
    "key": "cmd+enter",
    "command": "bigqueryRunner.run",
    "when": "resourceExtname == '.bqsql'"
  },
  {
    "key": "space h",
    "command": "bigqueryRunner.prevPage",
    "when": "resourceExtname == '.bqsql' && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' || vim.mode == 'VisualLine'"
  },
  {
    "key": "space l",
    "command": "bigqueryRunner.nextPage",
    "when": "resourceExtname == '.bqsql' && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' || vim.mode == 'VisualLine'"
  }
}
```

### When set the output destination to the Log window:

To avoid long horizontal tables from being broken, add the following settings to settings.json.

```json:settings.json
{
  "[Log]": {
    "editor.wordWrap": "off"
  }
}
```

## License

Apache 2.0 licensed. See the LICENSE file for details.
