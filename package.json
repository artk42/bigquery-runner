{
  "name": "bigquery-runner",
  "displayName": "BigQuery Runner",
  "description": "An extension for querying Google Cloud Platform's BigQuery analytics datasets directly from VS Code.",
  "version": "0.0.13",
  "publisher": "minodisk",
  "repository": {
    "type": "git",
    "url": "https://github.com/minodisk/bigquery-runner.git"
  },
  "homepage": "https://marketplace.visualstudio.com/items?itemName=minodisk.bigquery-runner",
  "engines": {
    "vscode": "^1.62.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "icon": "bigquery-runner.png",
  "activationEvents": [
    "onLanguage:bigquery",
    "onLanguage:sql-bigquery",
    "onCommand:bigqueryRunner.run",
    "onCommand:bigqueryRunner.dryRun"
  ],
  "contributes": {
    "commands": [
      {
        "command": "bigqueryRunner.run",
        "title": "BigQuery Runner: Run"
      },
      {
        "command": "bigqueryRunner.dryRun",
        "title": "BigQuery Runner: Dry Run"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "BigQuery Runner",
      "properties": {
        "bigqueryRunner.keyFilename": {
          "type": "string",
          "default": "",
          "description": "(Required) Full path to the a .json, .pem, or .p12 key downloaded from the Google Developers Console. If you provide a path to a JSON file, the projectId option is not necessary. NOTE: .pem and .p12 require you to specify the email option as well."
        },
        "bigqueryRunner.projectId": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "(Optional) The project ID from the Google Developer's Console, e.g. 'grape-spaceship-123'. This is NOT needed if you are provide a key in JSON format"
        },
        "bigqueryRunner.location": {
          "type": "string",
          "default": "US",
          "description": "(Optional) The geographic location of the job. Required except for US and EU. See details at https://cloud.google.com/bigquery/docs/dataset-locations#specifying_your_location."
        },
        "bigqueryRunner.useLegacySql": {
          "type": "boolean",
          "default": false,
          "description": "(Optional) Specifies whether to use BigQuery's legacy SQL dialect for this query. The default value is true. If set to false, the query will use BigQuery's standard SQL: https://cloud.google.com/bigquery/sql-reference/"
        },
        "bigqueryRunner.maximumBytesBilled": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "(Optional) Limits the bytes billed for this job. Queries that will have bytes billed beyond this limit will fail (without incurring a charge). If unspecified, this will be set to your project default."
        },
        "bigqueryRunner.checkErrorOnSave.enabled": {
          "type": "boolean",
          "default": false,
          "description": "If set to true, do a dry run on file save to check for runtime errors in the query."
        },
        "bigqueryRunner.checkErrorOnSave.languageIds": {
          "type": "array",
          "default": [
            "bigquery",
            "sql-bigquery"
          ],
          "description": "List of language IDs to be checked for errors when saving files."
        },
        "bigqueryRunner.checkErrorOnSave.extensions": {
          "type": "array",
          "default": [
            ".bqsql",
            ".bqddl",
            ".bqdml"
          ],
          "description": "List of file extensions to be checked for errors when saving files."
        },
        "bigqueryRunner.output.destination.type": {
          "type": "string",
          "default": "output",
          "enum": [
            "output",
            "file"
          ],
          "description": "(Optional) Controls the output destination for query results."
        },
        "bigqueryRunner.output.destination.file.path": {
          "type": "string",
          "default": ".",
          "description": "(Optional) Controls the output file path for query results when output.type is specified as file."
        },
        "bigqueryRunner.output.format.type": {
          "type": "string",
          "default": "table",
          "enum": [
            "table",
            "json",
            "csv"
          ],
          "description": "(Optional) Controls the output format for query results."
        },
        "bigqueryRunner.output.format.csv.header": {
          "type": "boolean",
          "default": false,
          "description": "Columns names are automatically discovered from the first record if it is provided as a literal object."
        },
        "bigqueryRunner.output.format.csv.delimiter": {
          "type": "string",
          "default": ",",
          "description": "Set the delimiter between the fields of a record. It can be one or multiple characters. The default value is a comma `,`"
        },
        "bigqueryRunner.output.format.json.space": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "(Optional) Pretty print JSON results when output.format is specified as json."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "debug": "run-s package:debug install:debug",
    "package": "mkdirp dist && vsce package -o ./dist/",
    "package:debug": "mkdirp dist && vsce package -o ./dist/bigquery-runner-debug.vsix",
    "install:debug": "code --install-extension ./dist/bigquery-runner-debug.vsix",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "@google-cloud/bigquery": "^5.9.2",
    "@types/bytes": "^3.1.1",
    "bytes": "^3.1.1",
    "csv-stringify": "^6.0.4",
    "deepmerge": "^4.2.2",
    "easy-table": "^1.2.0",
    "flat": "^5.0.2",
    "mkdirp": "^0.5.5",
    "tenderizer": "^0.0.5"
  },
  "devDependencies": {
    "@types/csv-stringify": "^3.1.0",
    "@types/easy-table": "^1.2.0",
    "@types/flat": "^5.0.2",
    "@types/glob": "^7.1.4",
    "@types/mkdirp": "^1.0.2",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.62.0",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "npm-run-all": "^4.1.5",
    "typescript": "^4.4.4",
    "vsce": "^2.5.1"
  }
}
