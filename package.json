{
  "private": true,
  "name": "bigquery-runner",
  "displayName": "BigQuery Runner",
  "description": "An extension for querying Google Cloud Platform's BigQuery analytics datasets directly from VS Code.",
  "version": "0.0.53",
  "license": "Apach-2",
  "publisher": "minodisk",
  "repository": {
    "type": "git",
    "url": "https://github.com/minodisk/bigquery-runner.git"
  },
  "homepage": "https://marketplace.visualstudio.com/items?itemName=minodisk.bigquery-runner",
  "engines": {
    "vscode": "^1.68.0"
  },
  "workspaces": [
    "packages/codegen",
    "packages/core",
    "packages/extension",
    "packages/misc",
    "packages/viewer",
    "packages/types"
  ],
  "categories": [
    "Other"
  ],
  "tags": [
    "bigquery",
    "sql",
    "runner",
    "query",
    "erorr"
  ],
  "main": "out/extension/index.js",
  "icon": "out/assets/icon.png",
  "activationEvents": [
    "workspaceContains:**/*.bqsql",
    "workspaceContains:**/*.bqddl",
    "workspaceContains:**/*.bqdml",
    "onLanguage:bigquery",
    "onLanguage:sql-bigquery",
    "onCommand:bigqueryRunner.run",
    "onCommand:bigqueryRunner.dryRun"
  ],
  "contributes": {
    "commands": [
      {
        "command": "bigqueryRunner.run",
        "title": "BigQuery Runner: Run",
        "icon": "$(play)",
        "description": "Run a query in BigQuery and display the results. If text is selected, it will run the selected text as a query. If no text is selected, the entire file will be executed as a query."
      },
      {
        "command": "bigqueryRunner.prevPage",
        "title": "BigQuery Runner: Previous Page",
        "description": "Fetch and display the results of the previous page."
      },
      {
        "command": "bigqueryRunner.nextPage",
        "title": "BigQuery Runner: Next Page",
        "description": "Fetch and display the results of the next page."
      },
      {
        "command": "bigqueryRunner.dryRun",
        "title": "BigQuery Runner: Dry Run",
        "description": "Dry-run a query in BigQuery and display the result. If there is an error in the query, the wrong token of the query will be marked."
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId in bigqueryRunner.languageIds || resourceExtname in bigqueryRunner.extensions && bigqueryRunner.icon",
          "command": "bigqueryRunner.run",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "BigQuery Runner",
      "properties": {
        "bigqueryRunner.keyFilename": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The path to the JSON file for the service account. If a relative path is specified, it is taken as a path relative to the root folder opened in VS Code. If not specified, the path specified by `GOOGLE_APPLICATION_CREDENTIALS` will be used."
        },
        "bigqueryRunner.projectId": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Project ID for Google Cloud Platform. If not specified, the value of `project_id` in the JSON file of the service account will be used."
        },
        "bigqueryRunner.location": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The geographic location of all datasets and jobs referenced and created through this extension. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location."
        },
        "bigqueryRunner.useLegacySql": {
          "type": "boolean",
          "default": false,
          "description": "Flag whether to use legacy SQL. If `false`, use standard SQL."
        },
        "bigqueryRunner.maximumBytesBilled": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Limits the bytes billed for this query. Queries with bytes billed above this limit will fail (without incurring a charge). If unspecified, the project default is used."
        },
        "bigqueryRunner.validation.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Validate the query whenever the file set in `languageIds` or `extensions` is modified."
        },
        "bigqueryRunner.validation.debounceInterval": {
          "type": "number",
          "default": 600,
          "description": "Debounce interval in milliseconds to validate the query when the file is modified."
        },
        "bigqueryRunner.languageIds": {
          "type": "array",
          "default": [
            "bigquery",
            "sql-bigquery"
          ],
          "description": "List of [language identifiers](https://code.visualstudio.com/docs/languages/identifiers) of the files whose queries are to be validated when the files are modified."
        },
        "bigqueryRunner.extensions": {
          "type": "array",
          "default": [
            ".bqsql",
            ".bqddl",
            ".bqdml"
          ],
          "description": "List of file extensions for which the query is to be validated when the file is modified."
        },
        "bigqueryRunner.pagination.results": {
          "type": [
            "number",
            "null"
          ],
          "default": 100,
          "description": "The number of rows per page. If a number is specified, only that number of rows will be fetched and displayed as a result. If null is specified, all results will be fetched and displayed. Paging by command `bigqueryRunner.prevPage` or `bigqueryRunner.nextPage`."
        },
        "bigqueryRunner.csv.header": {
          "type": "boolean",
          "default": false,
          "description": "The flag whether to add column names to CSV."
        },
        "bigqueryRunner.csv.delimiter": {
          "type": "string",
          "default": ",",
          "description": "The delimiter for CSV. For example, if set to \t, the output will be formatted as TSV."
        },
        "bigqueryRunner.viewer.column": {
          "type": [
            "string",
            "number"
          ],
          "default": "+1",
          "description": "A string such as '+N', '-N' can be set to specify a position relative to the column where the query file is opened. Then, if you set a number greater than 1, the viewer will appear in the specified number of columns from the left. A number of -1 means the viewer will appear in the same column as the query file, and a number of -2 means the viewer will appear in the column farthest to the right."
        },
        "bigqueryRunner.icon": {
          "type": "boolean",
          "default": true,
          "description": "Display GUI button to run on the editor title menu bar."
        },
        "bigqueryRunner.statusBarItem.align": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "enum": [
            "left",
            "right",
            null
          ],
          "description": "The alignment of the status bar item."
        },
        "bigqueryRunner.statusBarItem.priority": {
          "type": [
            "number",
            "null"
          ],
          "default": null,
          "description": "The priority of status bar item. Higher value means the item should be shown more to the left."
        }
      }
    }
  },
  "scripts": {
    "dev": "run-p dev:*",
    "dev:extension": "npm run -w extension dev",
    "dev:codegen": "npm run -w codegen dev",
    "dev:viewer": "npm run -w viewer dev",
    "lint": "run-p lint:*",
    "lint:core": "npm run -w core lint",
    "lint:extension": "npm run -w extension lint",
    "lint:viewer": "npm run -w viewer lint",
    "lint-fix": "run-p lint-fix:*",
    "lint-fix:core": "npm run -w core lint-fix",
    "lint-fix:extension": "npm run -w extension lint-fix",
    "lint-fix:viewer": "npm run -w viewer lint-fix",
    "test": "npm run test-coverage",
    "test-coverage": "run-s test-coverage:*",
    "test-coverage:core": "npm run -w core test-coverage",
    "test-watch": "run-p test-watch:*",
    "test-watch:core": "npm run -w core test-watch",
    "vscode:prepublish": "rm -rf ./out && npm run build",
    "build": "run-p build:*",
    "build:codegen": "npm run -w codegen build",
    "build:extension": "npm run -w extension build:production",
    "build:viewer": "npm run -w viewer build:production",
    "build:misc": "npm run -w misc build",
    "debug": "run-s package:debug install:debug",
    "package": "mkdir -p dist && vsce package -o ./dist/",
    "package:debug": "mkdir -p dist && vsce package -o ./dist/bigquery-runner-debug.vsix",
    "install:debug": "code --install-extension ./dist/bigquery-runner-debug.vsix"
  },
  "dependencies": {
    "@chakra-ui/icons": "^2.0.2",
    "@chakra-ui/react": "^2.2.1",
    "@google-cloud/bigquery": "^6.0.0",
    "bytes": "^3.1.2",
    "classnames": "^2.3.1",
    "csv-stringify": "^6.1.3",
    "date-fns": "^2.28.0",
    "deepmerge": "^4.2.2",
    "easy-table": "^1.2.0",
    "mkdirp": "^1.0.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@testing-library/user-event": "^14.2.1",
    "@types/bytes": "^3.1.1",
    "@types/csv-stringify": "^3.1.0",
    "@types/easy-table": "^1.2.0",
    "@types/glob": "^7.2.0",
    "@types/jest": "^28.1.2",
    "@types/mkdirp": "^1.0.2",
    "@types/mocha": "^9.1.1",
    "@types/node": "^18.0.0",
    "@types/react": "^18.0.14",
    "@types/react-dom": "^18.0.5",
    "@types/vscode": "^1.68.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^5.29.0",
    "@typescript-eslint/parser": "^5.29.0",
    "@vscode/test-electron": "^2.1.4",
    "ejs": "^3.1.8",
    "esbuild": "^0.14.47",
    "eslint": "^8.18.0",
    "eslint-config-react-app": "^7.0.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-react": "^7.30.0",
    "eslint-plugin-strict-dependencies": "^1.0.1",
    "eslint-plugin-unused-imports": "^2.0.0",
    "glob": "^8.0.3",
    "jest": "^28.1.1",
    "jest-environment-jsdom": "^28.1.1",
    "jest-watch-typeahead": "^1.1.0",
    "mocha": "^10.0.0",
    "nodemon": "^2.0.16",
    "npm-run-all": "^4.1.5",
    "react-app-polyfill": "^3.0.0",
    "react-dev-utils": "^12.0.1",
    "ts-jest": "^28.0.5",
    "typescript": "^4.7.4",
    "vsce": "^2.9.1",
    "web-vitals": "^2.1.4"
  }
}
